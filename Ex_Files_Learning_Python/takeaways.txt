Class docstring example ==> Ch2/classes_start.py
Function docstring example ==> Ch2/conditionals_start.py
    For docstring formatting ==> https://numpydoc.readthedocs.io/en/latest/format.html
    For python code formatting ===> https://www.python.org/dev/peps/pep-0008/#documentation-strings
`with` statement for doing work on classes, objects, opened files etc. ==> Ch4/files_start.py
    Use [instance].__dict__ to return all attributes of a class instance
    Use __init__ to initialise the instance of the class
    For an instance of foodItemNoCal named `f1` with a method .show(),   `f1.show()` is equivalent to `foodItemNoCal.show(f1)`
    classes can inherit all methods of a superclass, with the superclass methods being called as super().method1()
    ****For information on superclasses, class methods, altnerative constructors, and class variables: https://youtu.be/RSl87lqOXDE****
class with a custom __init__, __exit__, __enter__ methods ==> Ch4/files_start.py
for getting information on current path, filepaths, etc. , use `os` module ===> Ch4/ospathutils_start.py
for manipulating files, (e.g. copying, renaming, zipping, deleting) use shutils ===> Ch4/shell_start.py
for json files, use json module ===> Ch5/jsondata_start.py
    # json files are read as dictionaries, use .keys() method for dictionaries to list the top-level dictionary categories
for open() :
    # r: Opens the file in read-only mode. Starts reading from the beginning of the file and is the default mode for the open() function.
    # rb: Opens the file as read-only in binary format and starts reading from the beginning of the file. While binary format can be used for different purposes, it is usually used when dealing with things like images, videos, etc.
    # r+: Opens a file for reading and writing, placing the pointer at the beginning of the file.
    # w: Opens in write-only mode. The pointer is placed at the beginning of the file and this will overwrite any existing file with the same name. It will create a new file if one with the same name doesn't exist.
    # wb: Opens a write-only file in binary mode.
    # w+: Opens a file for writing and reading.
    # wb+: Opens a file for writing and reading in binary mode.
    # a: Opens a file for appending new information to it. The pointer is placed at the end of the file. A new file is created if one with the same name doesn't exist.
    # ab: Opens a file for appending in binary mode.
    # a+: Opens a file for both appending and reading.
    # ab+: Opens a file for both appending and reading in binary mode.
for zipping files, use zipfile module, and os.make_archive in os module